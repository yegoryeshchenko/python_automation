pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                git branch: 'homework_32_jenkins_ci', url: 'https://github.com/yegoryeshchenko/python_automation.git'
            }
        }
        stage('Install dependencies') {
            steps {
                sh '''#!/bin/bash
                    apt-get update
                    apt-get install -y python3 python3-dev python3-pip python3.11-venv
                    rm -rf venv
                    python3 -m venv venv

                    # Add Google Chrome repository and install Chrome
                    wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | gpg --dearmor > /usr/share/keyrings/google-chrome-keyring.gpg
                    echo 'deb [signed-by=/usr/share/keyrings/google-chrome-keyring.gpg] http://dl.google.com/linux/chrome/deb/ stable main' > /etc/apt/sources.list.d/google-chrome.list
                    apt-get update
                    apt-get install -y google-chrome-stable

                    # Install Xvfb for headless execution
                    apt-get install -y xvfb

                    # Install additional Chrome dependencies
                    apt-get install -y libnss3 libxss1 libasound2'''
            }
        }
        stage('Install environments') {
            steps {
                sh '''#!/bin/bash
                    source venv/bin/activate
                    pip install -r requirements.txt
                '''
            }
        }
        stage('Run tests') {
            steps {
                sh '''#!/bin/bash
                    source venv/bin/activate
                    # Run Xvfb to simulate a display for headless Chrome
                    Xvfb :99 -screen 0 1920x1080x24 &
                    export DISPLAY=:99
                    pytest -m ${pytest_mark} --alluredir=allure-results'''
            }
        }
    }

    post {
        always {
            allure includeProperties: false, jdk: '', results: [[path: 'allure-results']]
        }
    }
}
